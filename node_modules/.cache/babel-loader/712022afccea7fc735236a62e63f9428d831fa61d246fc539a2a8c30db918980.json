{"ast":null,"code":"//import {createStore} from 'redux';\n//configureStore like createStore creates a store but it makes merging multiple reducers into one reducer easier \nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      //this is forbidden when we use reducer but not with toolkit to manage state directly\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// const counterReducer =(state = initialState , action) => {\n//     if (action.type === 'increment'){\n//         return{\n//             counter: state.counter+ 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n//      if(action.type === 'increase'){\n//          return{\n//              counter: state.counter + action.amount,\n//              showCounter: state.showCounter\n//          }\n//      }\n//     if(action.type === 'decrement'){\n//         return{\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n\n//     if(action.type === 'toggle'){\n//         return {\n//             showCounter: !state.showCounter,\n//             counter: state.counter\n//         }\n//     }\n//     return state;\n// };\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer\n  }\n});\nexport const counterActions = count;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","toggleCounter","store","reducer","counterActions","count"],"sources":["/Users/sunaz/Downloads/ReduxAndRouter/src/store/index.js"],"sourcesContent":["//import {createStore} from 'redux';\n//configureStore like createStore creates a store but it makes merging multiple reducers into one reducer easier \nimport { createSlice, configureStore } from '@reduxjs/toolkit';\n\n\nconst initialState = { counter: 0, showCounter: true}\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers:{\n      increment(state) {\n          //this is forbidden when we use reducer but not with toolkit to manage state directly\n          state.counter++;\n      },\n      decrement(state) {\n        state.counter--; \n      },\n      increase(state, action) {\n          state.counter = state.counter + action.amount;\n      },\n      toggleCounter(state) {\n          state.showCounter = !state.showCounter\n      }\n  }\n});\n\n// const counterReducer =(state = initialState , action) => {\n//     if (action.type === 'increment'){\n//         return{\n//             counter: state.counter+ 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n//      if(action.type === 'increase'){\n//          return{\n//              counter: state.counter + action.amount,\n//              showCounter: state.showCounter\n//          }\n//      }\n//     if(action.type === 'decrement'){\n//         return{\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n\n//     if(action.type === 'toggle'){\n//         return {\n//             showCounter: !state.showCounter,\n//             counter: state.counter\n//         }\n//     }\n//     return state;\n// };\n\nconst store = configureStore({\n    reducer: {counter: counterSlice.reducer}\n});\nexport const counterActions = count\n\nexport default store;"],"mappings":"AAAA;AACA;AACA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAG9D,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAI,CAAC;AAErD,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfJ,YAAY,EAAEA,YAAY;EAC1BK,QAAQ,EAAC;IACLC,SAASA,CAACC,KAAK,EAAE;MACb;MACAA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACpBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,MAAM;IACjD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACjBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IAC1C;EACJ;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMW,KAAK,GAAGd,cAAc,CAAC;EACzBe,OAAO,EAAE;IAACb,OAAO,EAAEE,YAAY,CAACW;EAAO;AAC3C,CAAC,CAAC;AACF,OAAO,MAAMC,cAAc,GAAGC,KAAK;AAEnC,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}
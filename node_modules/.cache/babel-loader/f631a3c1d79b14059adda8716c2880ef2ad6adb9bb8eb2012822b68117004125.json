{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      //this is forbidden when we use reducer but not with toolkit to manage state directly\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, a) {},\n    toggleCounter() {}\n  }\n});\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","a","toggleCounter","counterReducer","action","type","amount","store"],"sources":["/Users/sunaz/Downloads/ReduxAndRouter/src/store/index.js"],"sourcesContent":["import {createStore} from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\n\n\nconst initialState = { counter: 0, showCounter: true}\n\ncreateSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers:{\n      increment(state) {\n          //this is forbidden when we use reducer but not with toolkit to manage state directly\n          state.counter++;\n      },\n      decrement(state) {\n        state.counter--; \n      },\n      increase(state, a) {},\n      toggleCounter() {}\n  }\n});\nconst counterReducer =(state = initialState , action) => {\n    if (action.type === 'increment'){\n        return{\n            counter: state.counter+ 1,\n            showCounter: state.showCounter\n        };\n    }\n     if(action.type === 'increase'){\n         return{\n             counter: state.counter + action.amount,\n             showCounter: state.showCounter\n         }\n     }\n    if(action.type === 'decrement'){\n        return{\n            counter: state.counter - 1,\n            showCounter: state.showCounter\n        };\n    }\n\n    if(action.type === 'toggle'){\n        return {\n            showCounter: !state.showCounter,\n            counter: state.counter\n        }\n    }\n    return state;\n};\n\nconst store = createStore(counterReducer);\n\nexport default store;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAG9C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAI,CAAC;AAErDH,WAAW,CAAC;EACVI,IAAI,EAAE,SAAS;EACfH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAC;IACLC,SAASA,CAACC,KAAK,EAAE;MACb;MACAA,KAAK,CAACL,OAAO,EAAE;IACnB,CAAC;IACDM,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACL,OAAO,EAAE;IACjB,CAAC;IACDO,QAAQA,CAACF,KAAK,EAAEG,CAAC,EAAE,CAAC,CAAC;IACrBC,aAAaA,CAAA,EAAG,CAAC;EACrB;AACF,CAAC,CAAC;AACF,MAAMC,cAAc,GAAEA,CAACL,KAAK,GAAGN,YAAY,EAAGY,MAAM,KAAK;EACrD,IAAIA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAC;IAC5B,OAAM;MACFZ,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAE,CAAC;MACzBC,WAAW,EAAEI,KAAK,CAACJ;IACvB,CAAC;EACL;EACC,IAAGU,MAAM,CAACC,IAAI,KAAK,UAAU,EAAC;IAC1B,OAAM;MACFZ,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGW,MAAM,CAACE,MAAM;MACtCZ,WAAW,EAAEI,KAAK,CAACJ;IACvB,CAAC;EACL;EACD,IAAGU,MAAM,CAACC,IAAI,KAAK,WAAW,EAAC;IAC3B,OAAM;MACFZ,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEI,KAAK,CAACJ;IACvB,CAAC;EACL;EAEA,IAAGU,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAC;IACxB,OAAO;MACHX,WAAW,EAAE,CAACI,KAAK,CAACJ,WAAW;MAC/BD,OAAO,EAAEK,KAAK,CAACL;IACnB,CAAC;EACL;EACA,OAAOK,KAAK;AAChB,CAAC;AAED,MAAMS,KAAK,GAAGjB,WAAW,CAACa,cAAc,CAAC;AAEzC,eAAeI,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}